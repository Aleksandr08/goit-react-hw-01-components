{"version":3,"sources":["components/Profile/profile.module.css","components/FriendList/friendList.module.css","components/Statistics/statistics.module.css","components/TransactionHistory/transactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","profileStyles","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","Statistics","title","statisticStyles","statistics","stat_list","map","item","style","backgroundColor","random_bg_color","key","id","percentage","Math","floor","random","FriendListItem","isOnline","friendListStyles","online","offline","width","FriendList","friends","friendList","TransactionHistory","items","tableStyle","transactionHistory","type","amount","currency","App","user","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fd28849e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__80HGx\",\"description\":\"profile_description__2SA0e\",\"avatar\":\"profile_avatar__2V454\",\"name\":\"profile_name__1SD2e\",\"tag\":\"profile_tag__bWRpM\",\"location\":\"profile_location__3-X1j\",\"stats\":\"profile_stats__189sv\",\"label\":\"profile_label__3H_1-\",\"quantity\":\"profile_quantity__3pOOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendList_friendList__14tMr\",\"item\":\"friendList_item__3lac0\",\"status\":\"friendList_status___mbjh\",\"online\":\"friendList_online__1wssm\",\"offline\":\"friendList_offline__3eQdT\",\"avatar\":\"friendList_avatar__1eeOH\",\"name\":\"friendList_name__2xs3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__2Ss7P\",\"title\":\"statistics_title__2hNtd\",\"stat_list\":\"statistics_stat_list__yEgUL\",\"item\":\"statistics_item__1wqeV\",\"label\":\"statistics_label___YxGm\",\"percentage\":\"statistics_percentage__E_1pr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transactionHistory_transactionHistory__3iKd_\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport profileStyles from \"./profile.module.css\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <div className={profileStyles.profile}>\r\n    <div className={profileStyles.description}>\r\n      <img src={avatar} alt={name} className={profileStyles.avatar} />\r\n      <p className={profileStyles.name}>{name}</p>\r\n      <p className={profileStyles.tag}>@{tag}</p>\r\n      <p className={profileStyles.location}>{location}</p>\r\n    </div>\r\n    <ul className={profileStyles.stats}>\r\n      <li>\r\n        <span className={profileStyles.label}>Followers</span>\r\n        <span className={profileStyles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={profileStyles.label}>Views</span>\r\n        <span className={profileStyles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={profileStyles.label}>Likes</span>\r\n        <span className={profileStyles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  location: \"default location\",\r\n  avatar: \"https://i.ibb.co/7NmPR1b/avatar.png\",\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport statisticStyles from \"./statistics.module.css\";\r\n\r\nconst Statistics = ({ stats, title }) => (\r\n  <section className={statisticStyles.statistics}>\r\n    {title && <h2 className={statisticStyles.title}>{title}</h2>}\r\n    <ul className={statisticStyles.stat_list}>\r\n      {stats.map((item) => (\r\n        <li\r\n          className={statisticStyles.item}\r\n          style={{ backgroundColor: random_bg_color() }}\r\n          key={item.id}\r\n        >\r\n          <span className={statisticStyles.label}>{item.label}</span>\r\n          <span className={statisticStyles.percentage}>{item.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\n//для проверки создания заголовка просто поставить коммент\r\nStatistics.defaultProps = {\r\n  title: \"Upload stats\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nfunction random_bg_color() {\r\n  var x = Math.floor(Math.random() * 256);\r\n  var y = Math.floor(Math.random() * 256);\r\n  var z = Math.floor(Math.random() * 256);\r\n  var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n  return bgColor;\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport friendListStyles from \"./friendList.module.css\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <>\r\n    <span\r\n      className={isOnline ? friendListStyles.online : friendListStyles.offline}\r\n    ></span>\r\n    <img\r\n      className={friendListStyles.avatar}\r\n      src={avatar}\r\n      alt={name}\r\n      width=\"48\"\r\n    />\r\n    <p className={friendListStyles.name}>{name}</p>\r\n  </>\r\n);\r\n\r\n// const checkStatus = (isOnline) => {\r\n//   const status = [friendListStyles.status];\r\n\r\n//   if (isOnline) {\r\n//     status.push(friendListStyles.online);\r\n//   } else status.push(friendListStyles.offline);\r\n\r\n//   return status.join(\" \");\r\n// };\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar: \"https://i.ibb.co/7NmPR1b/avatar.png\",\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport friendListStyles from \"./friendList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={friendListStyles.friendList}>\r\n    {friends.map((item) => (\r\n      <li key={item.id} className={friendListStyles.item}>\r\n        <FriendListItem {...item} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes\r\n    })\r\n  )\r\n};","import React from \"react\";\r\nimport tableStyle from \"./transactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={tableStyle.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map((item) => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;","import React from \"react\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\n\r\nimport user from \"./components/Profile/user.json\";\r\nimport statistics from \"./components/Statistics/statistical-data.json\";\r\nimport friends from \"./components/FriendList/friends.json\";\r\nimport transactions from \"./components/TransactionHistory/transactions.json\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <Statistics stats={statistics} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transactions} />\r\n  </>\r\n);\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}